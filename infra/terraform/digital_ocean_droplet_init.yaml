#cloud-config

cloud_config_modules:
  - runcmd

cloud_final_modules:
  - scripts-user

write_files:
  - path: /scripts/install-docker-engine.sh
    permissions: '0700'
    owner: root
    content: |
      #!/usr/bin/env bash
      apt-get update
      apt-get install --assume-yes ca-certificates curl
      install --mode 0755 --directory /etc/apt/keyrings
      curl --fail --silent --show-error --location https://download.docker.com/linux/ubuntu/gpg --output /etc/apt/keyrings/docker.asc
      chmod a+r /etc/apt/keyrings/docker.asc
      echo \
          "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu \
          $(. /etc/os-release && echo "$VERSION_CODENAME") stable" | \
          tee /etc/apt/sources.list.d/docker.list > /dev/null
      apt-get update
      apt-get install --assume-yes docker-ce

  - path: /scripts/deploy-application.sh
    permissions: '0711'
    owner: root
    content: |
      #!/usr/bin/env bash
      mkdir -p /app
      wget --output-document=/app/docker-compose.yaml https://raw.githubusercontent.com/samuelko123/price-alert/refs/heads/main/infra/docker/docker-compose.yaml
      docker compose --file /app/docker-compose.yaml --profile production pull
      docker compose --file /app/docker-compose.yaml --profile production up --detach --remove-orphans

  - path: /scripts/install-webhook.sh
    permissions: '0700'
    owner: root
    content: |
      #!/usr/bin/env bash
      apt-get update
      apt-get install --assume-yes webhook
      cat > /lib/systemd/system/webhook.service <<EOF
      [Unit]
      Description=webhook server for ci
      ConditionPathExists=/usr/bin/webhook
      After=network.target
      [Service]
      Type=simple
      WorkingDirectory=/scripts
      ExecStart=/usr/bin/webhook -ip 0.0.0.0 -port 9000 -hooks /scripts/hooks.json -verbose
      Restart=on-failure
      PrivateTmp=true
      [Install]
      WantedBy=default.target
      EOF

  - path: /scripts/hooks.json
    permissions: '0644'
    owner: root
    content: |
      [
        {
          "id": "deploy-application",
          "command-working-directory": "/",
          "execute-command": "/scripts/deploy-application.sh"
        }
      ]

  - path: /scripts/deploy-webhook.sh
    permissions: '0700'
    owner: root
    content: |
      #!/usr/bin/env bash
      systemctl daemon-reload
      systemctl start webhook.service
      systemctl enable webhook.service

  - path: /scripts/call-webhook.sh
    permissions: '0700'
    owner: root
    content: |
      #!/usr/bin/env bash
      curl http://0.0.0.0:9000/hooks/deploy-application

  - path: /scripts/setup-nginx.sh
    permissions: '0700'
    owner: root
    content: |
      #!/usr/bin/env bash
      apt update
      apt install --assume-yes nginx

      ufw allow OpenSSH
      ufw allow 'Nginx HTTP'
      ufw --force enable

      ln -s /etc/nginx/sites-available/price-alert.samuelko123.dev /etc/nginx/sites-enabled/
      rm /etc/nginx/sites-enabled/default

      nginx -t
      systemctl reload nginx

  - path: /etc/nginx/sites-available/price-alert.samuelko123.dev
    permissions: '0644'
    owner: root
    content: |
      server {
        listen 80;
        listen [::]:80;

        server_name price-alert.samuelko123.dev;

        location /hooks {
          proxy_pass http://0.0.0.0:9000/hooks;
        }

        location / {
          proxy_pass http://0.0.0.0:4000;
        }
      }

  - path: /scripts/setup-ssl-cert.sh
    permissions: '0700'
    owner: root
    content: |
      #!/usr/bin/env bash

      ufw allow 'Nginx Full'
      ufw delete allow 'Nginx HTTP'

      apt install --assume-yes certbot python3-certbot-nginx
      certbot --nginx --non-interactive --agree-tos --email price-alert.samuelko123@outlook.com --domains price-alert.samuelko123.dev

runcmd:
  - bash /scripts/install-docker-engine.sh
  - bash /scripts/install-webhook.sh
  - bash /scripts/deploy-webhook.sh
  - bash /scripts/call-webhook.sh
  - bash /scripts/setup-nginx.sh
  - bash /scripts/setup-ssl-cert.sh
